"""
Three-step plan to success:
1) Analyze the data of our Kaggle 1000 to find all of the correlations (pairplot, then line of best fit, then error bars)
2) Train a model (using sklearn; the only independent variable will be income, because literally all we have is IPR)
3) Use the model to predict the average SAT, ACT, college GPA, and years to graduate college
of our 100,000 schools (basically, sklearn will generate the value from the regression
line that matches the school’s IPR value. The IPR values tho will be indexed to the parental income levels tho // ie. Take the
parental income, divide by the median USA income, and then that’s the IPR for a given student)
"""

!pip install numpy
!pip install matplotlib
!pip install scikit-learn
!pip install seaborn
!pip install pandas

import numpy as np
import matplotlib.pyplot as plt
import scikit-learn as sklearn
import seaborn as sns
import pandas as pd

# Still need to import datasets and install/import any other packages. We also need to create our machine-learning model.
# We most likely need a regression model, and this will probably be from the module scikit-learn.

from google.colab import files
uploaded=files.upload()
graduation_rate=pd.read_csv("graduation_rate.csv")
IPR=pd.read_csv("IPR.csv")
print(graduation_rate.head(5))
print(IPR.head(5))
print(graduation_rate.columns.to_list())
print(IPR.columns.to_list())

# Use fig.add_axes() to create a plot that incorporates family income vs. both ACT and SAT scores.

# Use sns.factorplot() to look at the distribution of scores within family income brackets.

gradratepairwise=sns.pairplot(graduation_rate)

#This is making a 3D plot that compares SAT and ACT score to college GPA.
satactcolgpa=plt.axes(projection='3d')
sat = graduation_rate['SAT total score']
act = graduation_rate['ACT composite score']
colgpa=graduation_rate["college gpa"]
satactcolgpa.scatter3D(sat,act,colgpa)
